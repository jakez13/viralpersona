<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Module 1: Video Creation System</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #F0F2F5; /* A light grey to make the white card stand out */
        }
        /* Custom styling for the copy button icon */
        .copy-icon {
            display: inline-block;
            width: 1em;
            height: 1em;
            vertical-align: -0.125em;
            fill: currentColor;
            margin-left: 0.5rem;
        }
        /* New Styles for Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .animated-section {
            opacity: 0;
            transform: translateY(20px);
            animation: fadeIn 0.8s ease-out forwards;
        }
        /* Progress bar styles */
        .progress-container {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 8px;
            background-color: #e0e0e0;
            z-index: 1000;
        }
        .progress-bar {
            height: 100%;
            width: 0%;
            background-color: #FFC001;
            transition: width 0.1s linear;
        }
    </style>
</head>
<body class="bg-gray-100 font-sans leading-normal tracking-tight">

    <!-- Progress Bar -->
    <div class="progress-container">
        <div id="progressBar" class="progress-bar"></div>
    </div>

    <div id="worksheet-content" class="max-w-4xl mx-auto my-10 p-6 bg-white rounded-xl shadow-lg">

        <!-- Header Bar -->
        <header class="bg-[#10371C] text-white p-6 rounded-t-lg">
            <h1 class="text-3xl font-bold mb-1">📹 Module 1: Video Creation System</h1>
            <p class="text-sm font-light">A step-by-step guide to go from idea to recording for long and short videos.</p>
        </header>

        <!-- Context Box -->
        <div class="bg-[#FFC001] text-black p-4 mt-6 rounded-lg animated-section" style="animation-delay: 0.1s;">
            <p class="font-bold">Quick Context:</p>
            <p>Your persona is your edge—without it, your content blends in.</p>
        </div>

        <!-- Long-Form Video Section -->
        <section class="mt-8 animated-section" style="animation-delay: 0.2s;">
            <h2 class="text-2xl font-bold text-[#10371C]">🎬 Long-Form Video (YouTube)</h2>
            <p class="text-gray-600 mt-2">Plan your next long-form video, focusing on a structured, segment-by-segment approach.</p>

            <div class="space-y-6 mt-6">
                <!-- 1. Idea (TFA Method) -->
                <div>
                    <h3 class="text-xl font-bold mb-2">1. Idea (TFA Method)</h3>
                    <p class="text-gray-700 mb-2">Break down your idea into Topic, Format, and Angle.</p>
                    
                    <!-- Example Block -->
                    <div class="bg-gray-100 p-4 rounded-lg italic text-gray-600 mb-4">
                        <p><strong>Example:</strong></p>
                        <p>Topic: How to start a freelance business</p>
                        <p>Format: Step-by-step tutorial</p>
                        <p>Angle: "How I went from broke to six figures in 12 months"</p>
                    </div>

                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Topic</label>
                            <input type="text" id="long_topic" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity50 p-2 border" placeholder="e.g., What the video is about">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Format</label>
                            <input type="text" id="long_format" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-2 border" placeholder="e.g., Tutorial, vlog, Q&A, review, commentary, etc.">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Angle</label>
                            <input type="text" id="long_angle" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-2 border" placeholder="e.g., Stakes, twist, superlative, transformation, etc.">
                        </div>
                    </div>
                </div>

                <!-- 2. Thumbnail & Title Concept -->
                <div>
                    <h3 class="text-xl font-bold mb-2">2. Thumbnail & Title Concept</h3>
                    <p class="text-gray-700 mb-2">Plan the thumbnail before scripting. Ask: Would someone stop scrolling if they saw this visual?</p>
                    <div class="bg-[#FFC001] text-black p-3 my-4 rounded-lg font-bold">
                        Make sure the title matches the thumbnail in energy and promise.
                    </div>
                    <p class="text-gray-700 mb-4">Write 3–5 clickable titles and make sure they work together to get a click.</p>
                    <table class="w-full text-left border-collapse">
                        <thead>
                            <tr class="bg-gray-50">
                                <th class="p-3 border">Title Concept</th>
                                <th class="p-3 border">Your Idea</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="p-3 border">Title 1</td>
                                <td class="p-3 border"><input type="text" id="long_title1" class="w-full bg-transparent border-none p-0 focus:outline-none" placeholder="Enter your first title here"></td>
                            </tr>
                            <tr>
                                <td class="p-3 border">Title 2</td>
                                <td class="p-3 border"><input type="text" id="long_title2" class="w-full bg-transparent border-none p-0 focus:outline-none" placeholder="Enter your second title here"></td>
                            </tr>
                            <tr>
                                <td class="p-3 border">Title 3</td>
                                <td class="p-3 border"><input type="text" id="long_title3" class="w-full bg-transparent border-none p-0 focus:outline-none" placeholder="Enter your third title here"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <!-- 3. Script or Outline -->
                <div>
                    <h3 class="text-xl font-bold mb-2">3. Script or Outline</h3>
                    <p class="text-gray-700 mb-2">Build your structure: Hook → Setup → Value delivery → Payoff. Use your own templates if you have them.</p>
                    <textarea id="long_outline" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-3 border" rows="6" placeholder="Write your script or outline here..."></textarea>
                </div>

                <!-- 4. Retention Plan -->
                <div>
                    <h3 class="text-xl font-bold mb-2">4. Retention Plan</h3>
                    <p class="text-gray-700 mb-2">Plan dopamine hits every 30–60 seconds to keep viewers engaged. This could be:</p>
                    <div class="space-y-2 mt-4">
                        <label class="flex items-center space-x-2">
                            <input type="checkbox" id="long_retention1" class="rounded text-[#10371C] focus:ring-[#10371C] focus:ring-opacity-50">
                            <span>Jokes or surprising moments</span>
                        </label>
                        <label class="flex items-center space-x-2">
                            <input type="checkbox" id="long_retention2" class="rounded text-[#10371C] focus:ring-[#10371C] focus:ring-opacity-50">
                            <span>Visual changes, angles, or edits</span>
                        </label>
                        <label class="flex items-center space-x-2">
                            <input type="checkbox" id="long_retention3" class="rounded text-[#10371C] focus:ring-[#10371C] focus:ring-opacity-50">
                            <span>A narrative reset</span>
                        </label>
                    </div>
                </div>

                <!-- 5. Recording & Filming -->
                <div class="mt-8">
                    <h3 class="text-xl font-bold mb-2">5. Recording & Filming</h3>
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Recording Prep</label>
                            <p class="text-xs text-gray-500 mt-1">Get your camera, lighting, and mic ready. Mentally walk through your flow.</p>
                            <textarea id="long_prep" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-3 border" rows="3" placeholder="Notes on your recording setup..."></textarea>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Film in Segments</label>
                            <p class="text-xs text-gray-500 mt-1">Record section by section (Intro → Part 1 → Part 2 → etc.). This makes editing easier and improves pacing.</p>
                            <textarea id="long_segments" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-3 border" rows="4" placeholder="Your filming segments plan..."></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <hr class="my-10 border-gray-300">

        <!-- Short-Form Video Section -->
        <section class="animated-section" style="animation-delay: 0.3s;">
            <h2 class="text-2xl font-bold text-[#10371C]">📱 Short-Form Video (Reels, Shorts, TikTok)</h2>
            <p class="text-gray-600 mt-2">Design your short-form video for maximum attention in the first few seconds.</p>
            
            <div class="space-y-6 mt-6">
                <!-- 1. Idea (TFA Method) -->
                <div>
                    <h3 class="text-xl font-bold mb-2">1. Idea (TFA Method)</h3>
                    <p class="text-gray-700 mb-2">Use the same Topic, Format, and Angle method as long-form, but focus on a strong feeling, such as curiosity, fear, or desire.</p>
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Topic</label>
                            <input type="text" id="short_topic" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-2 border" placeholder="e.g., What the video is about">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Format</label>
                            <input type="text" id="short_format" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-2 border" placeholder="e.g., Tutorial, pointing video, dance challenge, comedy sketch, unboxing, etc.">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Angle</label>
                            <input type="text" id="short_angle" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-2 border" placeholder="e.g., A quick life hack that sparks desire">
                        </div>
                    </div>
                </div>

                <!-- 2. First Frame & Hook -->
                <div>
                    <h3 class="text-xl font-bold mb-2">2. First Frame & Hook</h3>
                    <p class="text-gray-700 mb-2">Plan what the first frame of the video looks like; it should stop a viewer from scrolling before they hear any words.</p>
                    <div class="bg-gray-100 p-4 rounded-lg italic text-gray-600 mb-4">
                        <p><strong>Example:</strong></p>
                        <p>First Frame: A shocking facial expression</p>
                        <p>Hook: "This one-minute trick will change your life..."</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">First Frame Visual</label>
                        <input type="text" id="short_visual" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-2 border" placeholder="e.g., Describe your scroll-stopping visual here">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mt-4">Hook (First Line)</label>
                        <input type="text" id="short_hook" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-2 border" placeholder="e.g., “Don’t start your day without doing this...”">
                    </div>
                </div>

                <!-- 3. Plan Captions & Visuals -->
                <div>
                    <h3 class="text-xl font-bold mb-2">3. Plan Captions & Visuals</h3>
                    <p class="text-gray-700 mb-2">On-screen text should match the hook, making the video readable without sound.</p>
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Caption Text</label>
                            <div class="relative mt-1">
                                <input type="text" id="short_caption" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-2 border pr-10" placeholder="e.g., Your business needs this! Swipe to copy">
                                <span class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400">
                                    <svg class="copy-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M16 1H4C2.9 1 2 1.9 2 3v14h2V3h12V1zm3 4H8C6.9 4 6 4.9 6 6v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H8V6h11v14z"/>
                                    </svg>
                                </span>
                            </div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Visual Attention Plan</label>
                            <p class="text-sm text-gray-500 mt-1">Change visuals, angles, or energy every 1–3 seconds to keep retention high and prevent swipes.</p>
                            <textarea id="short_attention" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-3 border" rows="4" placeholder="e.g., Change visuals, angles, or energy every 1-3 seconds"></textarea>
                        </div>
                    </div>
                </div>

                <!-- 4. Film with Energy -->
                <div>
                    <h3 class="text-xl font-bold mb-2">4. Film with Energy</h3>
                    <p class="text-gray-700 mb-2">Match the tone, whether it's intense, funny, calm, or relatable. Your energy directly impacts your audience's retention.</p>
                    <textarea id="short_energy" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-[#10371C] focus:ring focus:ring-[#10371C] focus:ring-opacity-50 p-3 border" rows="4" placeholder="Describe your filming approach here..."></textarea>
                </div>
            </div>
        </section>

        <!-- Complete Module CTA -->
        <div class="flex justify-center mt-10">
            <button id="completeModuleBtn" class="bg-[#10371C] text-white font-bold py-3 px-8 rounded-full shadow-lg hover:bg-opacity-90 transition-colors duration-200">
                Complete Module
            </button>
        </div>
    </div>
    
    <!-- Module Completion Page (Hidden by default) -->
    <div id="completion-page" class="max-w-4xl mx-auto my-10 p-6 bg-white rounded-xl shadow-lg text-center hidden" style="min-height: 50vh;">
        <div class="h-full flex flex-col justify-center items-center p-8">
            <h2 class="text-4xl font-bold text-[#10371C] mb-4">Module 1 Completed! 🎉</h2>
            <p class="text-xl text-gray-700 mb-8">You've successfully completed the Video Creation System worksheet. You're one step closer to mastering viral content!</p>
            <div class="flex space-x-4 justify-center">
                <a href="https://www.skool.com/viral/classroom/26e71bae?md=528e7b894ca9466887baff406bbc60b3" target="_blank" class="bg-[#FFC001] text-black font-bold py-3 px-8 rounded-full shadow-lg hover:bg-opacity-90 transition-colors duration-200 inline-block">
                    Start Next Module
                </a>
                <button id="restartBtn" class="bg-gray-300 text-gray-800 font-bold py-3 px-8 rounded-full shadow-lg hover:bg-gray-400 transition-colors duration-200">
                    Restart Worksheet
                </button>
            </div>
        </div>
    </div>

    <script type="module">
        // Firebase Imports
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { getAuth, signInAnonymously, signInWithCustomToken } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";
        import { getFirestore, doc, onSnapshot, setDoc, getDoc } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        // Firebase Initialization
        const firebaseConfig = JSON.parse(__firebase_config);
        const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';
        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);
        const auth = getAuth(app);
        let userId;

        // Debounce function to limit database writes
        function debounce(func, wait) {
            let timeout;
            return function(...args) {
                const context = this;
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(context, args), wait);
            };
        }

        const dataToSave = {};

        // Function to collect all data and save to Firestore
        async function saveFormData() {
            if (!userId) {
                console.log("User not authenticated yet. Skipping save.");
                return;
            }
            
            // Collect all input values and checkbox states
            const inputs = document.querySelectorAll('input[type="text"], textarea');
            inputs.forEach(input => {
                dataToSave[input.id] = input.value;
            });
            const checkboxes = document.querySelectorAll('input[type="checkbox"]');
            checkboxes.forEach(checkbox => {
                dataToSave[checkbox.id] = checkbox.checked;
            });

            const docRef = doc(db, 'artifacts', appId, 'users', userId, 'module1_data', 'main_data');
            try {
                await setDoc(docRef, dataToSave, { merge: true });
                console.log("Data saved successfully!");
            } catch (e) {
                console.error("Error adding document: ", e);
            }
        }

        const debouncedSave = debounce(saveFormData, 1000);

        // Function to load data from Firestore
        async function loadFormData() {
            if (!userId) {
                console.log("User not authenticated yet. Skipping load.");
                return;
            }
            const docRef = doc(db, 'artifacts', appId, 'users', userId, 'module1_data', 'main_data');
            const docSnap = await getDoc(docRef);

            if (docSnap.exists()) {
                const data = docSnap.data();
                // Load input values
                for (const key in data) {
                    const element = document.getElementById(key);
                    if (element) {
                        if (element.type === 'checkbox') {
                            element.checked = data[key];
                        } else {
                            element.value = data[key];
                        }
                    }
                }
                console.log("Data loaded successfully!");
            } else {
                console.log("No saved data found.");
            }
        }

        // Authentication and Data Handling
        async function initAuthAndData() {
            try {
                if (typeof __initial_auth_token !== 'undefined') {
                    await signInWithCustomToken(auth, __initial_auth_token);
                } else {
                    await signInAnonymously(auth);
                }
                userId = auth.currentUser?.uid || crypto.randomUUID();
                console.log("Authenticated with userId:", userId);

                // Set up real-time listener
                const docRef = doc(db, 'artifacts', appId, 'users', userId, 'module1_data', 'main_data');
                onSnapshot(docRef, (docSnap) => {
                    if (docSnap.exists()) {
                        const data = docSnap.data();
                        for (const key in data) {
                            const element = document.getElementById(key);
                            if (element) {
                                if (element.type === 'checkbox') {
                                    element.checked = data[key];
                                } else {
                                    element.value = data[key];
                                }
                            }
                        }
                    } else {
                        console.log("No saved data found for real-time listener.");
                    }
                });
                
                // Load initial data on page load
                await loadFormData();

            } catch (error) {
                console.error("Authentication or Firestore error:", error);
            }

            // Add event listeners for saving
            const inputs = document.querySelectorAll('input[type="text"], textarea, input[type="checkbox"]');
            inputs.forEach(input => {
                input.addEventListener('input', debouncedSave);
                input.addEventListener('change', debouncedSave);
            });
        }

        window.onload = initAuthAndData;

        // Progress bar script
        window.addEventListener('scroll', function() {
            var winScroll = document.body.scrollTop || document.documentElement.scrollTop;
            var height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
            var scrolled = (winScroll / height) * 100;
            document.getElementById("progressBar").style.width = scrolled + "%";
        });

        // Get the button and content sections
        const completeBtn = document.getElementById('completeModuleBtn');
        const restartBtn = document.getElementById('restartBtn');
        const worksheetContent = document.getElementById('worksheet-content');
        const completionPage = document.getElementById('completion-page');
        
        // Function to restart the worksheet
        function restartWorksheet() {
            // Clear all input fields and checkboxes
            const inputs = document.querySelectorAll('input[type="text"], textarea');
            inputs.forEach(input => input.value = '');
            const checkboxes = document.querySelectorAll('input[type="checkbox"]');
            checkboxes.forEach(checkbox => checkbox.checked = false);

            // Hide the completion page and show the worksheet
            completionPage.style.display = 'none';
            worksheetContent.style.display = 'block';

            // Scroll to the top of the page
            window.scrollTo(0, 0);
        }

        // Add event listeners
        completeBtn.addEventListener('click', function() {
            // Hide the worksheet content
            worksheetContent.style.display = 'none';
            // Show the completion page
            completionPage.style.display = 'block';
            // Scroll to the top of the page for a smooth transition
            window.scrollTo(0, 0);
        });

        restartBtn.addEventListener('click', restartWorksheet);
    </script>

</body>
</html>
